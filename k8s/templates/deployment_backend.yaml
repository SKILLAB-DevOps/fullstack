apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}-backend
  namespace: {{ .Values.app.name }}
  labels:
    app: {{ .Values.app.name }}-backend
spec:
  replicas: {{ .Values.app.backend.replica }}
  selector:
    matchLabels:
      app: {{ .Values.app.name }}-backend
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}-backend
    spec:
      containers:
      - name: {{ .Values.app.name }}-backend
        image: {{ .Values.app.backend.image }}:{{ .Values.app.backend.tag }}
        ports:
        - containerPort: {{ .Values.app.backend.service.port }}
        env:
        - name: DB_NAME
          value: "{{ .Values.postgresql.auth.database }}"
        - name: DB_USER
          value: "{{ .Values.postgresql.auth.username }}"
        - name: DB_PASSWORD
          value: "{{ .Values.postgresql.auth.password }}"
        - name: DB_HOST
          value: "{{ .Values.app.db.host }}"
        - name: DB_PORT
          value: "{{ .Values.app.db.port }}"
        livenessProbe:
          httpGet:
            path: /
            port: {{ .Values.app.backend.service.port }}
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.app.backend.service.port }}
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 250m
            memory: 256Mi